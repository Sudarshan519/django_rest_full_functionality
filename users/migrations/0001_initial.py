# Generated by Django 4.1.7 on 2023-04-22 05:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('wallet_user', models.BooleanField(default=True, verbose_name='Wallet User')),
                ('is_employee', models.BooleanField(default=True, verbose_name='IsEmployee')),
                ('is_employer', models.BooleanField(default=False, verbose_name='IsEmployer')),
                ('email', models.CharField(default='no@mail.com', max_length=100, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('resident_type', models.IntegerField(choices=[(1, 'Japanese'), (2, 'Foreigner')], default=1)),
                ('is_business_user', models.BooleanField(default=False)),
                ('emailVerified', models.BooleanField(default=False)),
                ('profileVerified', models.BooleanField(default=False)),
                ('kycVerified', models.IntegerField(choices=[(0, 'Uninitialized'), (1, 'Pending'), (2, 'Verified')], default=0)),
                ('gps', models.CharField(blank=True, max_length=60)),
                ('counter', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('redirect_url', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(default='info.png', upload_to='media')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=150, verbose_name='Country')),
                ('continent', models.CharField(max_length=50, verbose_name='Continent')),
                ('estimate', models.CharField(max_length=50, verbose_name='Estimate')),
                ('year', models.CharField(max_length=50, verbose_name='Year')),
                ('estimate2', models.CharField(max_length=50, verbose_name='Estimate2')),
                ('year2', models.CharField(max_length=50, verbose_name='Year2')),
                ('flag_img', models.URLField(verbose_name='flag image')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated Date')),
                ('iso3', models.CharField(max_length=50, verbose_name='ISO3')),
                ('name', models.CharField(max_length=50, verbose_name='NAME')),
                ('unit', models.IntegerField(default=1, verbose_name='Unit')),
                ('buy', models.FloatField(verbose_name='Buy')),
                ('sell', models.FloatField(verbose_name='Sell')),
            ],
        ),
        migrations.CreateModel(
            name='EkycType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Unverified'), (2, 'Basic'), (3, 'Full')], default=0, verbose_name='EKYC Type')),
                ('transactions_limit_per_day', models.IntegerField(verbose_name='Transactions limit per day')),
                ('transactions_limit_per_month', models.IntegerField(verbose_name='Transactions limit by month')),
                ('transactions_limit_per_six_months', models.IntegerField(verbose_name='Transactions limit by half year')),
                ('transactions_limit_per_year', models.IntegerField(verbose_name='Transactions limit by year')),
                ('transactions_amount_per_day', models.IntegerField(verbose_name='Transactions amount per day')),
                ('transactions_amount_per_month', models.IntegerField(verbose_name='Transactions amount by month')),
                ('transactions_amount_per_six_months', models.IntegerField(verbose_name='Transactions amount by half year')),
                ('transactions_amount_per_year', models.IntegerField(verbose_name='Transactions amount by year')),
            ],
        ),
        migrations.CreateModel(
            name='IntendedUseOfAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Indended Use of Account')),
            ],
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(default='Nepal', max_length=100)),
                ('district', models.CharField(default='', max_length=255)),
                ('post_office', models.CharField(max_length=50, verbose_name='Post office')),
                ('postal_pin_code', models.CharField(max_length=100, verbose_name='Postal/Pin Code')),
                ('postal_office_type', models.CharField(max_length=50, verbose_name='Post Office Type')),
            ],
        ),
        migrations.CreateModel(
            name='ProvinceDistricts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(default='Nepal', max_length=100)),
                ('district', models.CharField(default='', max_length=255)),
                ('province', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResidenceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Type')),
                ('detail', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.IntegerField(choices=[(0, 'Credit Card'), (2, 'Bank'), (3, 'Cash'), (4, 'Wallet')], verbose_name='Transactions type')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('account_number', models.IntegerField(verbose_name='Account Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_image', models.FileField(blank=True, null=True, upload_to=None, verbose_name='Passport Images')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(10.0)], verbose_name='Transaction Amount')),
                ('charge_amount', models.FloatField(default=50.0, verbose_name='Charge Amount')),
                ('remarks', models.CharField(max_length=150, verbose_name='Remarks')),
                ('transaction_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_send', to=settings.AUTH_USER_MODEL)),
                ('transaction_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_received', to=settings.AUTH_USER_MODEL)),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.transactiontype')),
            ],
        ),
        migrations.CreateModel(
            name='StatusOfResidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('residence_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.residencetype')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('front_img', models.ImageField(upload_to='media/', verbose_name='Front Image')),
                ('back_img', models.ImageField(upload_to='media', verbose_name='Back Image')),
                ('tilted', models.ImageField(upload_to='media', verbose_name='Tilted Image')),
                ('selfie', models.ImageField(upload_to='media', verbose_name='Selfie Image')),
                ('blink', models.ImageField(upload_to='media', verbose_name='Blink Image')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(blank=True, max_length=20)),
                ('title', models.IntegerField(choices=[(1, 'Mr'), (2, 'Mrs')], default=1)),
                ('country_of_residence', models.CharField(default='Japan', max_length=50, verbose_name='Country of residence')),
                ('status_of_residence', models.CharField(default='Skilled Professional', max_length=100, verbose_name='Status of residence')),
                ('profession', models.CharField(default='', max_length=50, verbose_name='Profession')),
                ('passport_number', models.CharField(default='1234', max_length=50, verbose_name='Passport Number')),
                ('password_front', models.FileField(blank=True, null=True, upload_to=None, verbose_name='Passport Front')),
                ('password_back', models.FileField(blank=True, null=True, upload_to=None, verbose_name='Passport Back')),
                ('organization_type', models.CharField(default='None', max_length=100, verbose_name='Organization Type')),
                ('business_name', models.CharField(default='None', max_length=50, verbose_name='Business Name')),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Registration number')),
                ('documents', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.userdocuments', verbose_name='documents')),
                ('profile_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='users.residencetype')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(blank=True, max_length=255)),
                ('status_of_residence', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.statusofresidence')),
            ],
        ),
        migrations.CreateModel(
            name='Ekyc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_img', models.ImageField(blank=True, null=True, upload_to='media/', verbose_name='Front Image')),
                ('back_img', models.ImageField(blank=True, null=True, upload_to='media', verbose_name='Back Image')),
                ('tilted', models.ImageField(blank=True, null=True, upload_to='media', verbose_name='Tilted Image')),
                ('indended_use_of_account', models.CharField(default='own_use', max_length=50, verbose_name='Indended Use of Account')),
                ('mobile_number', models.CharField(max_length=50, verbose_name='Mobile Number')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('gender', models.CharField(max_length=50, verbose_name='Gender')),
                ('date_of_issue', models.DateField(verbose_name='Date of issue')),
                ('peroid_of_stay', models.DateField(verbose_name='Peroid of stay')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('postal', models.CharField(max_length=50, verbose_name='Postal Code')),
                ('prefature', models.CharField(max_length=50, verbose_name='Prefecture')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('building_name_or_number', models.CharField(max_length=50, verbose_name='Building Name/ Number')),
                ('nationality', models.CharField(max_length=50, verbose_name='Nationality')),
                ('source_of_income', models.FileField(blank=True, null=True, upload_to='media', verbose_name='Source of Income')),
                ('tax_return', models.FileField(blank=True, null=True, upload_to='media', verbose_name='Tax Return')),
                ('audit_report', models.FileField(blank=True, null=True, upload_to='media', verbose_name='Audit Report')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='kyc_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.ekyctype'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
